[{"/Users/sarastrasner/codefellows/401/groupToDo/todo/todo/src/index.js":"1","/Users/sarastrasner/codefellows/401/groupToDo/todo/todo/src/App.js":"2","/Users/sarastrasner/codefellows/401/groupToDo/todo/todo/src/reportWebVitals.js":"3","/Users/sarastrasner/codefellows/401/groupToDo/todo/todo/src/components/todo.js":"4","/Users/sarastrasner/codefellows/401/groupToDo/todo/todo/src/components/list.js":"5","/Users/sarastrasner/codefellows/401/groupToDo/todo/todo/src/components/form.js":"6","/Users/sarastrasner/codefellows/401/groupToDo/todo/todo/src/components/hooks/ajax.js":"7","/Users/sarastrasner/codefellows/401/groupToDo/todo/todo/src/context/settings/context.js":"8"},{"size":478,"mtime":1611174305405,"results":"9","hashOfConfig":"10"},{"size":879,"mtime":1611189898089,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1611174305405,"results":"12","hashOfConfig":"10"},{"size":1993,"mtime":1611182363142,"results":"13","hashOfConfig":"10"},{"size":3340,"mtime":1611194491505,"results":"14","hashOfConfig":"10"},{"size":1462,"mtime":1611174305403,"results":"15","hashOfConfig":"10"},{"size":1114,"mtime":1611182363140,"results":"16","hashOfConfig":"10"},{"size":1067,"mtime":1611194067718,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"vnlw5p",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/sarastrasner/codefellows/401/groupToDo/todo/todo/src/index.js",[],["38","39"],"/Users/sarastrasner/codefellows/401/groupToDo/todo/todo/src/App.js",[],"/Users/sarastrasner/codefellows/401/groupToDo/todo/todo/src/reportWebVitals.js",[],"/Users/sarastrasner/codefellows/401/groupToDo/todo/todo/src/components/todo.js",[],"/Users/sarastrasner/codefellows/401/groupToDo/todo/todo/src/components/list.js",["40","41","42"],"import React, { useState, useContext } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Badge from 'react-bootstrap/Badge';\nimport Pagination from 'react-js-pagination';\nimport { AppSettingsContext } from '../context/settings/context';\nimport useAjaxCalls from './hooks/ajax';\n\nfunction TodoList(props) {\n  const [URL, list, setList, addItem] = useAjaxCalls();\n  const appSettingsContext = useContext(AppSettingsContext);\n  const [activePage, setActivePage] = useState(1);\n\n  const handlePageChange = pageNumber => {\n    console.log(`active page is ${pageNumber}`);\n    setActivePage(pageNumber);\n  };\n\n  const updateSortMethod = e => {\n    e.preventDefault();\n    appSettingsContext.setDefaultSort(e.target.value);\n    renderSortMethod();\n  };\n\n  const updateCompleted = e =>{\n    appSettingsContext.setCompleted(e.target.value);\n    //TO DO: if props.list.complete is true, hide that item\n  }\n\n  const renderSortMethod = e => {\n    if (appSettingsContext.defaultSortField === 'difficulty') {\n      let result = props.list.sort((a, b) =>\n        a.difficulty > b.difficulty ? 1 : -1\n      );\n      console.log(result);\n      setList([result]);\n    } else if (appSettingsContext.defaultSortField === 'assignee') {\n      let result = props.list.sort((a, b) =>\n        a.assignee > b.assignee ? 1 : -1\n      );\n      console.log(result);\n      setList([result]);\n    } else if (appSettingsContext.defaultSortField === 'status') {\n      let result = props.list.sort((a, b) =>\n        a.complete > b.complete ? 1 : -1\n      );\n      console.log(result);\n      setList([result]);\n    }\n  };\n\n  console.log('this is props.list.length', props.list.length);\n  return (\n    <div>\n      <p>\n        Here is the show completed field {appSettingsContext.showCompleted}\n      </p>\n      <label for=\"sort\">Choose a sort method:</label>\n      <button onClick={updateSortMethod} value=\"difficulty\">\n        Difficulty\n      </button>\n      <button onClick={updateSortMethod} value=\"assignee\">\n        Assignee\n      </button>\n      <button onClick={updateSortMethod} value=\"status\">\n        Status\n      </button>\n      <div>\n      <button onClick={updateCompleted} value=\"false\">\n        Hide completed items\n      </button>\n      </div>\n\n      {props.list.map(item => (\n        <Modal.Dialog>\n          <Modal.Header\n            closeButton\n            onClick={() => props.handleDelete(item._id)}\n          >\n            <Modal.Title>\n              {item.complete ? (\n                <Badge pill variant=\"success\">\n                  Complete\n                </Badge>\n              ) : (\n                <Badge pill variant=\"danger\">\n                  Pending\n                </Badge>\n              )}\n              {item.assignee}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body\n            className={`complete-${item.complete.toString()}`}\n            key={item._id}\n          >\n            <span onClick={() => props.handleComplete(item._id)}>\n              {item.text} difficulty: {item.difficulty}\n            </span>\n          </Modal.Body>\n        </Modal.Dialog>\n      ))}\n      <Pagination\n        activePage={activePage}\n        itemsCountPerPage={3}\n        totalItemsCount={450}\n        pageRangeDisplayed={5}\n        onChange={handlePageChange}\n      />\n    </div>\n  );\n}\n\nexport default TodoList;\n","/Users/sarastrasner/codefellows/401/groupToDo/todo/todo/src/components/form.js",[],"/Users/sarastrasner/codefellows/401/groupToDo/todo/todo/src/components/hooks/ajax.js",["43"],"import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\n\n\nfunction useAjaxCalls() {\n  const URL = 'https://api-js401.herokuapp.com/api/v1/todo';\n  const [list, setList] = useState([]);\n  \n  useEffect(() => {\n    reload();\n  }, []);\n\n  const reload = async () => {\n    console.log('inside reload function');\n    await axios.get(URL)\n      .then(results => {\n        console.log('results two ways', results.data)\n        setList(results.data.results);\n      })\n      .catch((err) => {\n        console.error(err)\n      });\n  }\n  const addItem = (item) => {\n    console.log('this is the item', item);\n        axios.post(URL,\n      {\n        \"complete\": false,\n        \"difficulty\": item.difficulty,\n        \"text\": item.text,\n        \"assignee\": item.assignee,\n        \"__v\": 0\n    },\n    )\n      .then(results => {\n        console.log('inside the .then', results);\n        setList([...list, results.data]);\n        console.log('after set list', list);\n      })\n      .catch((err)=>{\n        console.error(err)\n      })\n  };\n  return [URL, list, setList, addItem]\n}\n\nexport default useAjaxCalls;",["44","45"],"/Users/sarastrasner/codefellows/401/groupToDo/todo/todo/src/context/settings/context.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":9,"column":10,"nodeType":"52","messageId":"53","endLine":9,"endColumn":13},{"ruleId":"50","severity":1,"message":"54","line":9,"column":15,"nodeType":"52","messageId":"53","endLine":9,"endColumn":19},{"ruleId":"50","severity":1,"message":"55","line":9,"column":30,"nodeType":"52","messageId":"53","endLine":9,"endColumn":37},{"ruleId":"50","severity":1,"message":"56","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":13},{"ruleId":"46","replacedBy":"57"},{"ruleId":"48","replacedBy":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'URL' is assigned a value but never used.","Identifier","unusedVar","'list' is assigned a value but never used.","'addItem' is assigned a value but never used.","'React' is defined but never used.",["59"],["60"],"no-global-assign","no-unsafe-negation"]